{"version":3,"sources":["components/Home.js","components/NumericInput.js","hooks/useWindowDimensions.js","components/Loader.js","components/Host.js","App.js","reportWebVitals.js","index.js"],"names":["Home","div","initial","opacity","animate","transition","type","className","style","marginBottom","to","size","shape","NumericInput","props","prefix","onChange","e","value","target","isNaN","test","index","placeholder","maxLength","getWindowDimensions","window","width","innerWidth","height","innerHeight","Loader","src","alt","Host","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useWindowDimensions","result","setResult","people","setPeople","billAmount","setBillAmount","totalBill","setTotalBill","wallet","setWallet","name","setName","page","setPage","currAmount","setCurrAmount","email","setEmail","error","setError","loading","setLoading","useRef","length","paginate","newDirection","message","Object","keys","constructor","parseFloat","payload","axios","post","then","res","data","sendData","copyToClipboard","person","address","str","el","document","createElement","setAttribute","position","left","body","appendChild","select","execCommand","removeChild","info","copyAllToClipboard","key","amount","color","onClick","icon","LeftOutlined","fontSize","exitBeforeEnter","x","exit","duration","direction","scale","repeat","Infinity","repeatType","WalletFilled","UserOutlined","Group","gutter","span","MailFilled","currBill","warning","newPeople","threshold","map","i","swipeLeft","content","action","removePerson","undefined","PaperClipOutlined","App","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d6e023b8.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'antd';\n\nimport './Home.css';\nimport { AnimatePresence, motion } from 'framer-motion';\n\nconst Home = () => {\n  return (\n    <motion.div\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      transition={{ type: 'spring' }}\n      className={'home-container'}>\n      <header className={'main-header'}>CryptoLunch</header>\n      <header style={{ marginBottom: '30px' }} className={'sub-header'}>\n        Decentralized application that splits your bill anonymously!\n      </header>\n      <Link to='/host'>\n        <Button size='large' shape='round' type='primary'>\n          Create a Bill!\n        </Button>\n      </Link>\n    </motion.div>\n  );\n};\n\nexport default Home;\n","import React, { useState } from 'react';\nimport { Input } from 'antd';\n\nconst NumericInput = (props) => {\n  const onChange = (e) => {\n    const { value } = e.target;\n    const reg = /^([1-9]{1}[0-9]{0,2}(,\\d{3})*(\\.\\d{0,2})?|[1-9]{1}\\d{0,}(\\.\\d{0,2})?|0(\\.\\d{0,2})?|(\\.\\d{1,2}))$|^-?\\$?([1-9]{1}\\d{0,2}(,\\d{3})*(\\.\\d{0,2})?|[1-9]{1}\\d{0,}(\\.\\d{0,2})?|0(\\.\\d{0,2})?|(\\.\\d{1,2}))$|^\\(\\$?([1-9]{1}\\d{0,2}(,\\d{3})*(\\.\\d{0,2})?|[1-9]{1}\\d{0,}(\\.\\d{0,2})?|0(\\.\\d{0,2})?|(\\.\\d{1,2}))\\)$/;\n\n    if ((!isNaN(value) && reg.test(value)) || value === '') {\n      props.onChange(value, props.index);\n    }\n  };\n\n  return (\n    <Input\n      size='large'\n      className={props.className}\n      prefix={props.prefix}\n      onChange={onChange}\n      value={props.value}\n      placeholder={props.placeholder}\n      maxLength={25}\n    />\n  );\n};\n\nexport default NumericInput;\n","import { useState, useEffect } from 'react';\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height,\n  };\n}\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n","import React from 'react';\nimport './Loader.css';\n\nconst Loader = () => {\n  return (\n    <div className='loader'>\n      <img\n        className='loader__animated'\n        src='https://image.flaticon.com/icons/svg/561/561071.svg'\n        alt='Loading'\n      />\n      <img\n        src='https://image.flaticon.com/icons/svg/560/560969.svg'\n        alt='Loading'\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","import React, { useState, useRef } from 'react';\nimport axios from 'axios';\nimport { Redirect } from 'react-router-dom';\nimport { message, Button, Input, Space, Col, Row, Alert, List } from 'antd';\nimport {\n  LeftOutlined,\n  WalletFilled,\n  MailFilled,\n  PaperClipOutlined,\n  UserOutlined,\n} from '@ant-design/icons';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport NumericInput from './NumericInput';\nimport useWindowDimensions from '../hooks/useWindowDimensions';\n\nimport {\n  SwipeableList,\n  SwipeableListItem,\n} from '@sandstreamdev/react-swipeable-list';\nimport '@sandstreamdev/react-swipeable-list/dist/styles.css';\n\nimport './Host.css';\nimport Loader from './Loader';\n\nconst Host = () => {\n  const { width } = useWindowDimensions();\n  const [result, setResult] = useState({});\n  const [people, setPeople] = useState({});\n  const [billAmount, setBillAmount] = useState('');\n  const [totalBill, setTotalBill] = useState(0.0);\n  const [wallet, setWallet] = useState('');\n  const [name, setName] = useState('');\n  const [[page, direction], setPage] = useState([0, 0]);\n  const [currAmount, setCurrAmount] = useState('');\n  const [email, setEmail] = useState('');\n  const [error, setError] = useState(0);\n\n  const [refresh, setRefresh] = useState(false);\n\n  const [loading, setLoading] = useState(true);\n\n  const ref = useRef(null);\n\n  const onChange = (e, index) => {\n    if (index === 0) {\n      if (e.length !== 0) {\n        if (error === 3) {\n          // message.error('Please enter a wallet address.');\n          setError(2);\n        } else if (error === 1) {\n          setError(0);\n        } else if (error === 11) {\n          // wallet and name\n          // message.error('Please enter your name.');\n          setError(9);\n        } else if (error === 12) {\n          // message.error('Please fill out wallet and name fields');\n          setError(10);\n        }\n      }\n      setBillAmount(e);\n    } else if (index === 1) {\n      if (e.target.value.length !== 0) {\n        if (error === 3) {\n          // message.error('Please enter a bill amount.');\n          setError(1);\n        } else if (error === 2) {\n          setError(0);\n        } else if (error === 10) {\n          // message.error('Please enter your name.');\n          setError(9);\n        } else if (error === 12) {\n          // message.error('Please fill out bill and name fields.');\n          setError(11);\n        }\n      }\n      setWallet(e.target.value);\n    } else if (index === 2) {\n      if (e.target.value.length !== 0) {\n        if (error === 6) {\n          setError(5);\n          // message.error('Please enter the amount owed.');\n        } else if (error === 4) {\n          setError(0);\n        }\n      }\n      setEmail(e.target.value);\n    } else if (index === 3) {\n      if (e.length !== 0) {\n        if (error === 6) {\n          // message.error(\"Please enter the person's email address\");\n          setError(4);\n        } else if (error === 5) {\n          setError(0);\n        }\n      }\n      setCurrAmount(e);\n    } else if (index === 4) {\n      if (e.target.value.length !== 0) {\n        if (error === 11) {\n          // bill empty\n          // message.error('Please enter a bill amount.');\n          setError(1);\n        } else if (error === 10) {\n          // wallet empty\n          // message.error('Please enter a wallet address.');\n          setError(2);\n        } else if (error === 9) {\n          setError(0);\n        } else if (error === 12) {\n          // message.error('Please fill out wallet and bill fields.');\n          setError(3);\n        }\n      }\n      setName(e.target.value);\n    }\n  };\n\n  const sendData = () => {\n    // json sent the address\n    setLoading(true);\n    let payload = {};\n    payload['bill_amount'] = billAmount;\n    payload['wallet_address'] = wallet;\n    payload['people'] = { ...people };\n    payload['requester_name'] = name;\n    // axios request here\n    axios.post('http://localhost:3000/api/makepool', payload).then((res) => {\n      setResult(res.data);\n      setLoading(false);\n    });\n  };\n\n  const paginate = (newDirection) => {\n    if (page + newDirection === 1) {\n      // check to make sure both fields are filled\n      if (billAmount === '' && wallet === '' && name === '') {\n        message.error('Please fill out all fields.');\n        setError(12);\n        return;\n      } else if (billAmount === '' && wallet === '') {\n        message.error('Please fill out wallet and bill fields.');\n        setError(3);\n        return;\n      } else if (billAmount === '' && name === '') {\n        message.error('Please fill out bill and name fields.');\n        setError(11);\n        return;\n      } else if (wallet === '' && name === '') {\n        message.error('Please fill out wallet and name fields.');\n        setError(10);\n        return;\n      } else if (billAmount === '') {\n        message.error('Please enter a bill amount.');\n        setError(1);\n        return;\n      } else if (wallet === '') {\n        message.error('Please enter a wallet address.');\n        setError(2);\n        return;\n      } else if (name === '') {\n        message.error('Please enter your name.');\n        setError(9);\n        return;\n      }\n    } else if (page + newDirection === 2) {\n      // check to make sure the amount of people is not zero\n      if (Object.keys(people).length === 0 && people.constructor === Object) {\n        message.error('Please add at least one person.');\n        setError(6);\n        return;\n      } else if (totalBill > parseFloat(billAmount)) {\n        message.error(\n          `Amount added ($${totalBill}) exceeds bill amount ($${billAmount})!\\nDelete some people (swipe right).`\n        );\n        setError(0);\n        return;\n      }\n      sendData();\n    }\n    setError(0);\n    setPage([page + newDirection, newDirection]);\n  };\n\n  const copyToClipboard = (person, address = false) => {\n    if (!address) {\n      let str = person + ' - $' + result[person];\n      const el = document.createElement('textarea');\n      el.value = str;\n      el.setAttribute('readonly', '');\n      el.style.position = 'absolute';\n      el.style.left = '-9999px';\n      document.body.appendChild(el);\n      el.select();\n      document.execCommand('copy');\n      document.body.removeChild(el);\n\n      message.info(`Copied ${person}'s key!`);\n    } else {\n      let str = person + ' - $' + result['amount'];\n      const el = document.createElement('textarea');\n      el.value = str;\n      el.setAttribute('readonly', '');\n      el.style.position = 'absolute';\n      el.style.left = '-9999px';\n      document.body.appendChild(el);\n      el.select();\n      document.execCommand('copy');\n      document.body.removeChild(el);\n\n      message.info(`Copied address!`);\n    }\n  };\n\n  const copyAllToClipboard = (result) => {\n    if (Object.keys(result).length === 0) {\n      return;\n    }\n    let str = '';\n    str += `Pay to ${result.address} - $${result.amount}\\n`;\n    for (var key in result.people) {\n      str += `${key} - $${people[key]}\\n`;\n    }\n    const el = document.createElement('textarea');\n    el.value = str;\n    el.setAttribute('readonly', '');\n    el.style.position = 'absolute';\n    el.style.left = '-9999px';\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n\n    message.info('Copied all keys!');\n  };\n\n  const addPerson = (e) => {\n    let reg = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n    if (currAmount === '' && email === '') {\n      message.error('Please fill out both fields.');\n      setError(6);\n    } else if (currAmount === '') {\n      message.error('Please enter the amount owed.');\n      setError(5);\n    } else if (email === '') {\n      message.error('Please enter a valid e-mail.');\n      setError(4);\n    } else if (email in people) {\n      message.error('Duplicate e-mail detected.');\n      setError(7);\n    } else if (!reg.test(email)) {\n      message.error('Please enter a valid e-mail.');\n      setError(4);\n    } else {\n      let currBill = parseFloat(totalBill) + parseFloat(currAmount);\n\n      if (currBill > billAmount) {\n        message.warning(\"You've exceeded your bill amount!\");\n        setError(8);\n      } else {\n        // no error, so we add to the list\n        setError(0);\n      }\n\n      let newPeople = people;\n      newPeople[email] = currAmount;\n      setPeople(newPeople);\n\n      setTotalBill(currBill);\n      setEmail('');\n      setCurrAmount('');\n    }\n  };\n\n  const removePerson = (person) => {\n    let newPeople = { ...people };\n    let currBill = parseFloat(totalBill) - parseFloat(newPeople[person]);\n    if (currBill <= billAmount) {\n      setError(0);\n    }\n    delete newPeople[person];\n    setPeople(newPeople);\n    setTotalBill(currBill);\n  };\n\n  return (\n    <motion.div\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      transition={{ type: 'spring' }}>\n      <div className={'back-button'}>\n        {page === -1 && <Redirect to='/' />}\n        {page > -1 && (\n          <Button\n            style={{ color: 'rgb(62, 247, 62)', marginBottom: '3%' }}\n            onClick={() => paginate(-1)}\n            icon={<LeftOutlined style={{ fontSize: '2em' }} />}\n            type='text'\n            shape='round'\n          />\n        )}\n      </div>\n      <div className={'content-container'}>\n        <AnimatePresence initial={false} exitBeforeEnter>\n          {page === 0 && (\n            <motion.div\n              key='page-0'\n              initial={{ x: width, opacity: 0 }}\n              animate={{ x: 0, opacity: 1 }}\n              exit={{ x: -width, opacity: 0 }}\n              transition={{ type: 'spring', duration: 0.6 }}>\n              <header className={'header'}>Create a Bill</header>\n              <Space direction='vertical'>\n                <motion.div\n                  animate={{\n                    scale:\n                      error === 1 || error === 3 || error === 11 || error === 12\n                        ? [1.05, 1]\n                        : 1,\n                  }}\n                  transition={{\n                    repeat:\n                      error === 1 || error === 3 || error === 11 || error === 12\n                        ? Infinity\n                        : 0,\n                    repeatType: 'mirror',\n                  }}\n                  className={'input'}>\n                  <NumericInput\n                    className={'round-border'}\n                    onChange={onChange}\n                    index={0}\n                    prefix={'$'}\n                    placeholder={'Bill Amount'}\n                    value={billAmount}\n                  />\n                </motion.div>\n                <motion.div\n                  animate={{\n                    scale:\n                      error === 2 || error === 3 || error === 12 || error === 10\n                        ? [1.05, 1]\n                        : 1,\n                  }}\n                  transition={{\n                    repeat:\n                      error === 2 || error === 3 || error === 12 || error === 10\n                        ? Infinity\n                        : 0,\n                    repeatType: 'mirror',\n                  }}\n                  className={'input'}>\n                  <Input\n                    className={'round-border'}\n                    maxLength={64}\n                    onChange={(e) => onChange(e, 1)}\n                    prefix={<WalletFilled />}\n                    size='large'\n                    placeholder={'Wallet Address'}\n                    value={wallet}\n                  />\n                </motion.div>\n                <motion.div\n                  animate={{\n                    scale:\n                      error === 9 ||\n                      error === 11 ||\n                      error === 12 ||\n                      error === 10\n                        ? [1.05, 1]\n                        : 1,\n                  }}\n                  transition={{\n                    repeat:\n                      error === 9 ||\n                      error === 3 ||\n                      error === 11 ||\n                      error === 12 ||\n                      error === 10\n                        ? Infinity\n                        : 0,\n                    repeatType: 'mirror',\n                  }}\n                  className={'input'}>\n                  <Input\n                    className={'round-border'}\n                    maxLength={64}\n                    onChange={(e) => onChange(e, 4)}\n                    prefix={<UserOutlined />}\n                    size='large'\n                    placeholder={'Name'}\n                    value={name}\n                  />\n                </motion.div>\n                <Button\n                  onClick={() => paginate(1)}\n                  type='primary'\n                  shape='round'\n                  size='large'>\n                  Next\n                </Button>\n              </Space>\n            </motion.div>\n          )}\n\n          {page === 1 && (\n            <motion.div\n              key='page-1'\n              initial={{ x: width, opacity: 0 }}\n              animate={{ x: 0, opacity: 1 }}\n              exit={{ x: -width, opacity: 0 }}\n              transition={{ type: 'spring', duration: 0.6 }}>\n              <header className={'header'}>\n                Who owes you?\n                <header className={'sub-header'}>\n                  (Swipe right to delete)\n                </header>\n                <header className={`sub-header ${error === 8 ? 'red' : ''}`}>\n                  Pool: ${totalBill}\n                </header>\n                <header className={'sub-header'}>Bill: ${billAmount}</header>\n              </header>\n              <Space direction='vertical'>\n                <motion.div\n                  animate={{\n                    scale: error === 6 ? [1.05, 1] : 1,\n                  }}\n                  transition={{\n                    repeat: error === 6 ? Infinity : 0,\n                    repeatType: 'mirror',\n                  }}\n                  className={'input-full'}>\n                  <Input.Group size='large'>\n                    <Row gutter={0}>\n                      <Col span={16}>\n                        <motion.div\n                          animate={{\n                            scale: error === 4 ? [1.05, 1] : 1,\n                          }}\n                          transition={{\n                            repeat: error === 4 ? Infinity : 0,\n                            repeatType: 'mirror',\n                          }}>\n                          <Input\n                            className={'left-round-border'}\n                            prefix={<MailFilled />}\n                            value={email}\n                            size='large'\n                            onChange={(e) => onChange(e, 2)}\n                            placeholder={'E-mail'}\n                          />\n                        </motion.div>\n                      </Col>\n                      <Col span={8}>\n                        <motion.div\n                          animate={{\n                            scale: error === 5 ? [1.05, 1] : 1,\n                          }}\n                          transition={{\n                            repeat: error === 5 ? Infinity : 0,\n                            repeatType: 'mirror',\n                          }}>\n                          <NumericInput\n                            className={'right-round-border'}\n                            onChange={(e) => onChange(e, 3)}\n                            prefix={'$'}\n                            placeholder={'owed'}\n                            value={currAmount}\n                          />\n                        </motion.div>\n                      </Col>\n                    </Row>\n                  </Input.Group>\n                </motion.div>\n                <div className={'button-group'}>\n                  <Button\n                    onClick={addPerson}\n                    type='primary'\n                    shape='round'\n                    size='large'>\n                    Add\n                  </Button>\n\n                  <Button\n                    onClick={() => paginate(1)}\n                    type='primary'\n                    shape='round'\n                    size='large'>\n                    Finish\n                  </Button>\n                </div>\n                <AnimatePresence initial={false}>\n                  {Object.keys(people).length !== 0 && (\n                    <motion.div\n                      className={'list-container'}\n                      initial={{ x: width, opacity: 0 }}\n                      animate={{ x: 0, opacity: 1 }}\n                      exit={{ x: -width, opacity: 0 }}\n                      transition={{ type: 'spring', duration: 1.5 }}>\n                      <SwipeableList threshold={0.18}>\n                        <AnimatePresence initial={false}>\n                          {Object.keys(people).map((person, i) => (\n                            <motion.div\n                              key={i}\n                              className={'list-item'}\n                              animate={{ opacity: 1 }}\n                              exit={{ opacity: 0 }}\n                              transition={{ type: 'spring', duration: 0.2 }}>\n                              <SwipeableListItem\n                                swipeLeft={{\n                                  content: (\n                                    <div className={'delete'}>Delete</div>\n                                  ),\n                                  action: () => removePerson(person),\n                                }}>\n                                <div className={'list-item'}>\n                                  <div>{person} </div>\n                                  <div>${people[person]}</div>\n                                </div>\n                              </SwipeableListItem>\n                            </motion.div>\n                          ))}\n                        </AnimatePresence>\n                      </SwipeableList>\n                    </motion.div>\n                  )}\n                </AnimatePresence>\n              </Space>\n            </motion.div>\n          )}\n\n          {page === 2 && (\n            <motion.div\n              key='page-2'\n              initial={{ x: width, opacity: 0 }}\n              animate={{ x: 0, opacity: 1 }}\n              exit={{ x: -width, opacity: 0 }}\n              transition={{ type: 'spring', duration: 0.6 }}>\n              <header className={'header'}>\n                Deploying Smart Contract!\n                {/* <header className={'sub-header'}>(Click to copy)</header> */}\n              </header>\n              <AnimatePresence>\n                {loading && (\n                  <motion.div\n                    initial={{ opacity: 0 }}\n                    animate={{ x: 0, opacity: 1 }}\n                    exit={{ opacity: 0 }}\n                    transition={{ type: 'spring', duration: 1.5 }}>\n                    <Loader />\n                  </motion.div>\n                )}\n                {/* {!loading && (\n                  <motion.div\n                    initial={{ opacity: 0 }}\n                    animate={{ x: 0, opacity: 1 }}\n                    exit={{ opacity: 0 }}\n                    transition={{ type: 'spring', duration: 1.5 }}>\n                    <Space direction='vertical'>\n                      <div className={'list-container'}>\n                        {Object.keys(result).map((person) => (\n                          <div\n                            className={'list-item'}\n                            onClick={() => copyToClipboard(person)}>\n                            <div> {person} </div>\n\n                            <div>${people[person]}</div>\n                            <div style={{ width: '100%' }}>\n                              &gt; {result[person]}\n                            </div>\n                          </div>\n                        ))}\n                      </div>\n                      <div className={'button-group'}>\n                        <Button\n                          onClick={() => copyAllToClipboard(result)}\n                          type='primary'\n                          shape='round'\n                          icon={<PaperClipOutlined />}\n                          size='large'>\n                          Copy All\n                        </Button>\n                        {console.log(refresh)}\n                        <Button\n                          onClick={() => setPage([-1, 0])}\n                          type='primary'\n                          shape='round'\n                          size='large'>\n                          Start Over\n                        </Button>\n                      </div>\n                    </Space>\n                  </motion.div>\n                )} */}\n                {!loading && result.address !== undefined && (\n                  <div>\n                    <header className={'sub-header'}>\n                      Smart contract pending! :)\n                      <br />\n                      Please pay a small fee to deploy the smart contract to the\n                      address below! (Currency in Wei)\n                    </header>\n                    <motion.div\n                      initial={{ opacity: 0 }}\n                      animate={{ x: 0, opacity: 1 }}\n                      exit={{ opacity: 0 }}\n                      transition={{ type: 'spring', duration: 1.5 }}>\n                      <Space direction='vertical'>\n                        <div className={'list-container'}>\n                          <div\n                            className={'list-item'}\n                            onClick={() =>\n                              copyToClipboard(result.address, true)\n                            }>\n                            <div>Pay to: {result.address} </div>\n\n                            <div>{result.amount} wei</div>\n                          </div>\n                          {Object.keys(result.people).map((person) => (\n                            <div\n                              key={person}\n                              className={'list-item'}\n                              onClick={() => copyToClipboard(person)}>\n                              <div> {person} </div>\n\n                              <div>${people[person]}</div>\n                            </div>\n                          ))}\n                        </div>\n                        <div className={'button-group'}>\n                          <Button\n                            onClick={() => copyAllToClipboard(result)}\n                            type='primary'\n                            shape='round'\n                            icon={<PaperClipOutlined />}\n                            size='large'>\n                            Copy All\n                          </Button>\n                          <Button\n                            onClick={() => setPage([-1, 0])}\n                            type='primary'\n                            shape='round'\n                            size='large'>\n                            Start Over\n                          </Button>\n                        </div>\n                      </Space>\n                    </motion.div>\n                  </div>\n                )}\n                {!loading && result.address === undefined && (\n                  <div>\n                    <header className={'sub-header'}>\n                      Smart contract successfully deployed :)\n                      <br />\n                      Tell your friends to check their emails!\n                    </header>\n                    <motion.div\n                      initial={{ opacity: 0 }}\n                      animate={{ x: 0, opacity: 1 }}\n                      exit={{ opacity: 0 }}\n                      transition={{ type: 'spring', duration: 1.5 }}>\n                      <Space direction='vertical'>\n                        <div className={'list-container'}>\n                          {Object.keys(result.people).map((person) => (\n                            <div\n                              key={person}\n                              className={'list-item'}\n                              onClick={() => copyToClipboard(person)}>\n                              <div> {person} </div>\n\n                              <div>${people[person]}</div>\n                            </div>\n                          ))}\n                        </div>\n                        <div className={'button-group'}>\n                          <Button\n                            onClick={() => copyAllToClipboard(result)}\n                            type='primary'\n                            shape='round'\n                            icon={<PaperClipOutlined />}\n                            size='large'>\n                            Copy All\n                          </Button>\n                          <Button\n                            onClick={() => setPage([-1, 0])}\n                            type='primary'\n                            shape='round'\n                            size='large'>\n                            Start Over\n                          </Button>\n                        </div>\n                      </Space>\n                    </motion.div>\n                  </div>\n                )}\n              </AnimatePresence>\n            </motion.div>\n          )}\n        </AnimatePresence>\n      </div>\n    </motion.div>\n  );\n};\n\nexport default Host;\n","import './App.css';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport Home from './components/Home';\nimport Host from './components/Host';\nimport 'antd/dist/antd.css';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Router>\n        <Switch>\n          <Route path='/' component={Home} exact />\n          <Route path='/host' component={Host} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}